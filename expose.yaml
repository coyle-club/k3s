apiVersion: v1
kind: ConfigMap
metadata:
  name: expose-conf
  namespace: default
data:
  expose.conf: |
    server_names_hash_bucket_size 64;

    map $host $upstream_endpoint {
      nginx.coyle.club nginx.default.svc.coyle.club;
      default "";
    }

    server {
      listen 80;

      location /healthcheck {
        return 200 "OK";
      }
    }

    server {
      listen 80;
      server_name *.coyle.club;

      location / {
        return 301 https://$host$request_uri;
      }
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;

        auth_basic           "Top Secret";
        auth_basic_user_file /etc/nginx/conf.d/htpasswd;

        server_name *.coyle.club;

        location / {
          resolver 10.1.0.2;
          if $upstream_endpoint != "" {
            proxy_pass https://$upstream_endpoint$request_uri;
            proxy_http_version 1.1;
          } else {
            return 200 "Howdy";
          }
        }
    }
  htpasswd: |
    test:2ES7eMaRBSzFk
# ^ knowingly unsafe
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: expose
  name: expose
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expose
  template:
    metadata:
      labels:
        app: expose
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: expose-conf
        - mountPath: /etc/nginx/ssl
          name: ssl
      volumes:
      - name: expose-conf
        configMap:
          name: expose-conf
      - name: ssl
        secret:
          secretName: coyle-wildcard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: expose
  name: expose
  namespace: default
spec:
  clusterIP: 10.1.0.3
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: expose