apiVersion: v1
kind: Namespace
metadata:
  name: docker
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: coyle-wildcard
  namespace: docker
spec:
  secretName: coyle-wildcard
  dnsNames:
  - '*.coyle.club'
  - '*.docker.svc.coyle.club'
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-conf
  namespace: docker
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      debug:
        addr: :5001
        prometheus:
          enabled: true
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: docker
data:
  expose.conf: |
    server_names_hash_bucket_size 64;

    map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
      '' 'registry/2.0';
    }

    server {
      listen 80;
      server_name *.coyle.club;

      location /healthcheck {
        return 200 "OK";
      }

      location / {
        return 301 https://$host$request_uri;
      }
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;

        server_name *.coyle.club;

        client_max_body_size 0;

        chunked_transfer_encoding on;

        location /healthcheck {
          return 200 "OK";
        }

        location /v2/ {
          add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

          proxy_pass                          http://127.0.0.1:5000;
          proxy_set_header  Host              $http_host;
          proxy_set_header  X-Real-IP         $remote_addr;
          proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header  X-Forwarded-Proto $scheme;
          proxy_read_timeout                  900;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: registry
  name: registry
  namespace: docker
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: registry
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  namespace: docker
spec:
  serviceName: "registry"
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:2.8.1
        ports:
        - containerPort: 5000
          name: registry
        - containerPort: 5001
          name: metrics
        volumeMounts:
        - name: storage
          mountPath: /var/lib/registry
        - name: registry-conf
          mountPath: /etc/docker/registry
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-conf
        - mountPath: /etc/nginx/ssl
          name: ssl
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
      - name: registry-conf
        configMap:
          name: registry-conf
      - name: ssl
        secret:
          secretName: coyle-wildcard
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi